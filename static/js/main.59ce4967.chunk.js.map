{"version":3,"sources":["services/ProductService.js","actions/action.js","actions/actionTypes.js","reducers/getReducer.js","reducers/index.js","store.js","styles/style.js","components/NavBar.jsx","components/ListItemView.jsx","components/ProductItemPopup.jsx","components/ProductList.jsx","components/ProductInCart.jsx","components/SideBarView.jsx","components/Login.jsx","components/BidOnHomesManager.jsx","App.js","serviceWorker.js","index.js"],"names":["ProductService","fetch","method","then","res","json","userName","password","opts","email","headers","body","JSON","stringify","response","setLoginStatus","loginStatus","dispatch","type","setProductListView","isProductListView","inetialState","localStorage","getItem","productList","productInCartList","productListView","combineReducers","get","state","action","productItem","middleWare","thunk","store","createStore","rootReducer","applyMiddleware","paperStylesSourceList","css","listStyle","listItemStyle","cardStyle","paperStyles","sectionDesktop","cardActionColumnFlexBox","grow","inputRoot","NoPadding","rootContainer","fullContainerHeight","sideBarFixWidth","containerWidth","sideBarStyles","sideBarIcons","StyledAppBar","styled","AppBar","NavBarUnwrapped","handleProfileMenuOpen","event","setAnchorEl","currentTarget","handleMenuClose","onLogoutClick","setItem","anchorEl","value","this","setState","isMenuOpen","Boolean","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","props","position","Toolbar","Typography","variant","noWrap","IconButton","aria-label","color","Badge","badgeContent","length","edge","aria-controls","aria-haspopup","React","Component","NavBar","connect","StyledListItem","ListItem","ListItemView","ListItemText","primary","title","children","propType","onListItemClick","PropTypes","func","listItem","object","useStyles","makeStyles","root","maxWidth","media","height","ProductItemPopup","addProductToCart","quantity","classes","useState","setQuantity","Dialog","handleClose","aria-labelledby","isModalOpen","dividers","Card","className","CardActionArea","CardMedia","image","productDetails","CardContent","gutterBottom","component","description","price","Select","native","onChange","e","target","map","qty","key","CardActions","Button","size","ProductListUnwrapped","onHandleClose","isModelOpen","onProductClicked","getProductList","list","Paper","CircularProgress","List","startIcon","Divider","ProductList","StyledPaper","ProductInCart","setProductItem","setIsModalOpen","product","StyledGraphicEqIcon","GraphicEqIcon","StyledDashboardIcon","DashboardIcon","StyledSettingsIcon","SettingsIcon","StyledFeedbackIcon","FeedbackIcon","StyledHomeIcon","HomeIcon","StyledMenuBookIcon","MenuBookIcon","StyledReceiptIcon","ReceiptIcon","SideBarView","styleObject","Login","setUserName","setPassword","errorMessage","setErrorMessage","Fragment","TextField","label","getAccessToken","ErrorCode","access_token","refresh_token","BidOnHomesManager","Grid","container","item","xs","App","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"iTAAaA,EAAb,8GAEI,OAAOC,MAAM,oCAAqC,CAChDC,OAAQ,QACPC,MAAK,SAACC,GACP,OAAOA,EAAIC,YALjB,qCASwBC,EAAUC,GAC9B,IAAIC,EAAO,CACTC,MAAOH,EACPC,SAAUA,GAEZ,OAAON,MACL,oIACA,CACEC,OAAQ,OACRQ,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUL,KAGtBL,MAAK,SAACW,GACL,OAAOA,EAAST,cAzBxB,KCGaU,EAAiB,SAACC,GAAD,OAAiB,SAACC,GAC9CA,EAAS,CACPC,KCL6B,oBDM7BF,kBAqBSG,EAAqB,SAACC,GAAD,OAAuB,SAACH,GACxDA,EAAS,CACPC,KC5BiC,wBD6BjCE,wBEvBEC,EAAe,CACnBL,YAAsD,SAAzCM,aAAaC,QAAQ,gBAClCC,YAAa,GACbC,kBAAmB,GACnBC,iBAAiB,GCRJC,cAAgB,CAC7BC,IDUa,WAAyC,IAA/BC,EAA8B,uDAAtBR,EAAcS,EAAQ,uCACrD,OAAQA,EAAOZ,MACb,IDhB6B,oBCiB3B,OAAO,2BACFW,GADL,IAEEb,YAAac,EAAOd,cAGxB,IDpB4B,mBCqB1B,OAAO,2BACFa,GADL,IAEEL,YAAaM,EAAON,cAGxB,IDzB+B,sBC0B7B,OAAO,2BACFK,GADL,IAEEJ,kBAAkB,GAAD,mBAAMI,EAAMJ,mBAAZ,CAA+BK,EAAOC,gBAG3D,IDjCiC,wBCkC/B,OAAO,2BACFF,GADL,IAEEH,gBAAiBI,EAAOV,oBAE5B,QACE,OAAOS,MEnCPG,EAAa,CAACC,KAOLC,EANDC,YACZC,EAHmB,GAKnBC,IAAe,WAAf,EAAmBL,I,qwGCNd,IAAMM,EAAwBC,YAAH,KAWrBC,EAAYD,YAAH,KAOTE,EAAgBF,YAAH,KAkBbG,EAAYH,YAAH,KAaTI,EAAcJ,YAAH,KA2BXK,GAnBSL,YAAH,KASOA,YAAH,KAUOA,YAAH,MAIdM,EAA0BN,YAAH,IAChCK,GAQSE,GAJQP,YAAH,KAIEA,YAAH,MAOJQ,EAAYR,YAAH,KAWTS,GAPaT,YAAH,IACnBQ,GAMqBR,YAAH,MAITU,EAAgBV,YAAH,KAQbW,GAAsBX,YAAH,KAMnBY,GAAkBZ,YAAH,KAIfa,GAAiBb,YAAH,KAIdc,GAAgBd,YAAH,KAYbe,GAAef,YAAH,K,2OClIzB,IAAMgB,GAAeC,aAAOC,KAAPD,CAAH,KACdV,GAGEY,G,oDACJ,aAAe,IAAD,8BACZ,gBAYFC,sBAAwB,SAACC,GACvB,EAAKC,YAAYD,EAAME,gBAdX,EAiBdC,gBAAkB,WAChB,EAAKF,YAAY,OAlBL,EAqBdG,cAAgB,WACd1C,aAAa2C,QAAQ,eAAgB,IACrC3C,aAAa2C,QAAQ,gBAAiB,IACtC3C,aAAa2C,QAAQ,eAAgB,UAtBrC,EAAKpC,MAAQ,CACXqC,SAAU,MAHA,E,wDAOFC,GACVC,KAAKC,SAAS,CACZH,SAAUC,M,+BAiBJ,IAAD,OACDG,EAAaC,QAAQH,KAAKvC,MAAMqC,UAEhCM,EAAS,8BACTC,EACJ,YAACC,GAAA,EAAD,CACER,SAAUE,KAAKvC,MAAMqC,SACrBS,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,GAAIN,EACJO,aAAW,EACXC,gBAAiB,CAAEJ,SAAU,MAAOC,WAAY,SAChDI,KAAMX,EACNY,QAASd,KAAKL,iBAEd,YAACoB,GAAA,EAAD,CAAUC,QAAShB,KAAKL,iBAAxB,WACA,YAACoB,GAAA,EAAD,CACEC,QAAS,WACP,EAAKrB,kBACL,EAAKsB,MAAMtE,gBAAe,GAC1B,EAAKiD,kBAJT,WAWJ,OACE,mBAAKzB,IAAKO,GACR,YAACS,GAAD,CAAc+B,SAAS,UACrB,YAACC,GAAA,EAAD,KACE,YAACC,GAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,GAA/B,uBAaA,mBAAKnD,IAAKO,IACV,mBAAKP,IAAKK,GACR,YAAC+C,GAAA,EAAD,CAAYC,aAAW,mBAAmBC,MAAM,WAC9C,YAACC,GAAA,EAAD,CAAOD,MAAM,aACX,YAAC,KAAD,CACET,QAAS,WACP,EAAKC,MAAMlE,oBAAmB,QAKtC,YAACwE,GAAA,EAAD,CAAYC,aAAW,mBAAmBC,MAAM,WAC9C,YAACC,GAAA,EAAD,CACED,MAAM,YACNE,aAAc3B,KAAKiB,MAAM5D,kBAAkBuE,QAE3C,YAAC,KAAD,CACEZ,QAAS,WACP,EAAKC,MAAMlE,oBAAmB,QAKtC,YAACwE,GAAA,EAAD,CACEM,KAAK,MACLL,aAAW,0BACXM,gBAAe1B,EACf2B,gBAAc,OACdf,QAAShB,KAAKT,sBACdkC,MAAM,WAEN,YAAC,KAAD,UAKPpB,O,GA1GqB2B,IAAMC,WAsHvBC,GAASC,aANE,SAAC1E,GACvB,MAAO,CACLJ,kBAAmBI,EAAMD,IAAIH,qBAIc,CAC7CN,qBACAJ,kBAFoBwF,CAGnB7C,I,kLCvIH,IAAM8C,GAAiBhD,aAAOiD,KAAPjD,CAAH,KAChBf,GAGSiE,GAAe,SAACrB,GAC3B,OACE,YAACmB,GAAD,KACE,YAACG,GAAA,EAAD,CAAcC,QAASvB,EAAMwB,QAC5BxB,EAAMyB,WAKbN,GAAeO,SAAW,CACxBC,gBAAiBC,KAAUC,KAC3BC,SAAUF,KAAUG,Q,uGCLhBC,GAAYC,aAAW,CAC3BC,KAAM,CACJC,SAAU,KAEZC,MAAO,CACLC,OAAQ,OA0ECC,GAAmBpB,YAAQ,KAAM,CAC5CqB,iBR/E8B,SAAC7F,EAAa8F,GAAd,OAA2B,SAAC5G,GAC1Dc,EAAY8F,SAAWA,EACvB5G,EAAS,CACPC,KCnB+B,sBDoB/Ba,kBQ4EFZ,sBAF8BoF,EAtEE,SAAClB,GACjC,IACMyC,EAAUT,KAF2B,EAGXU,mBAAS,GAHE,oBAGpCF,EAHoC,KAG1BG,EAH0B,KAS3C,OACE,YAACC,GAAA,EAAD,CACE/C,QAASG,EAAM6C,YACfC,kBAAgB,0BAChBlD,KAAMI,EAAM+C,aAEZ,YAAC,KAAD,CAAgBtD,GAAG,0BAA0BI,QAASG,EAAM6C,aAA5D,oBAGA,YAAC,KAAD,CAAkBG,UAAQ,GACxB,YAACC,GAAA,EAAD,CAAMC,UAAWT,EAAQP,MACvB,YAACiB,GAAA,EAAD,KACE,YAACC,GAAA,EAAD,CACEF,UAAWT,EAAQL,MACnBiB,MAAOrD,EAAMsD,eAAeD,MAC5B7B,MAAM,kBAER,YAAC+B,GAAA,EAAD,KACE,YAACpD,GAAA,EAAD,CAAYqD,cAAY,EAACpD,QAAQ,KAAKqD,UAAU,MAC7CzD,EAAMsD,eAAe9B,OAExB,YAACrB,GAAA,EAAD,CAAYC,QAAQ,QAAQI,MAAM,gBAAgBiD,UAAU,KACzDzD,EAAMsD,eAAeI,aAExB,uBACE,sBAAK,aAAe1D,EAAMsD,eAAeK,MAAQnB,GADnD,WAGE,YAACoB,GAAA,EAAD,CAAQC,QAAM,EAAC/E,MAAO0D,EAAUsB,SA/BjB,SAACC,GAC5BpB,EAAYoB,EAAEC,OAAOlF,SALJ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAoCjBmF,KAAI,SAACC,GACjB,OACE,sBAAQC,IAAKD,EAAKpF,MAAOoF,GACtBA,UAQf,YAACE,GAAA,EAAD,KACE,YAACC,GAAA,EAAD,CAAQC,KAAK,QAAQ9D,MAAM,YAAYT,QAASC,EAAM6C,aAAtD,UAGA,YAACwB,GAAA,EAAD,CACEC,KAAK,QACL9D,MAAM,UACNT,QAAS,WACPC,EAAMuC,iBAAiBvC,EAAMsD,eAAgBd,GAC7CxC,EAAMlE,oBAAmB,GACzBkE,EAAM6C,gBANV,sBC9DN0B,G,oDACJ,aAAe,IAAD,8BACZ,gBAUFC,cAAgB,WACd,EAAKxF,SAAS,CAAEyF,aAAa,KAZjB,EAedC,iBAAmB,SAAChI,GAClB,EAAKsC,SAAS,CAAEyF,aAAa,EAAM/H,iBAdnC,EAAKF,MAAQ,CACXiI,aAAa,EACb/H,YAAa,IAJH,E,gEAQZqC,KAAKiB,MAAM2E,mB,+BAWH,IAAD,OACHC,EAAO7F,KAAKiB,MAAM7D,YACtB,OACE,YAAC0I,GAAA,EAAD,CAAO3H,IAAKI,GACO,IAAhBsH,EAAKjE,OACJ,YAACwC,GAAA,EAAD,CAAgBjG,IAAKG,GACnB,YAACkG,GAAA,EAAD,KACE,YAACuB,GAAA,EAAD,QAIJ,YAACC,GAAA,EAAD,CAAM7H,IAAKC,GACRyH,EAAKX,KAAI,SAACvH,GACT,OACE,YAAC,GAAD,CACEoF,SAAUpF,EACVyH,IAAKzH,EAAY+C,GACjB+B,MAAO9E,EAAY8E,OAEnB,YAAC6C,GAAA,EAAD,CACEjE,QAAQ,YACRI,MAAM,UACNT,QAAS,WACP,EAAK2E,iBAAiBhI,IAExBsI,UAAW,YAAC,KAAD,OANb,eAWA,YAACC,GAAA,EAAD,WAMV,YAAC3C,GAAD,CACEgB,eAAgBvE,KAAKvC,MAAME,YAC3BqG,YAAahE,KAAKvC,MAAMiI,YACxB5B,YAAa9D,KAAKyF,qB,GA3DOzD,IAAMC,WAwE5BkE,GAAchE,aANH,SAAC1E,GACvB,MAAO,CACLL,YAAaK,EAAMD,IAAIJ,eAIyB,CAAEwI,eT/ExB,kBAAM,SAAC/I,GACnCjB,EAAegK,iBAAiB7J,MAAK,SAACqB,GAAD,OACnCP,EAAS,CACPC,KCX0B,mBDY1BM,sBS2EqB+E,CACzBqD,I,gFC/EF,IAAMY,GAAchH,aAAO0G,KAAP1G,CAAH,KACblB,GA+CSmI,GAAgBlE,aANL,SAAC1E,GACvB,MAAO,CACLJ,kBAAmBI,EAAMD,IAAIH,qBAM/B,GAF2B8E,EA5CE,SAAClB,GAAW,IAAD,EACF0C,mBAAS,IADP,oBACjChG,EADiC,KACpB2I,EADoB,OAEF3C,oBAAS,GAFP,oBAEjC+B,EAFiC,KAEpBa,EAFoB,KAYxC,OACE,YAACH,GAAD,KACE,YAACJ,GAAA,EAAD,CAAM7H,IAAKC,GACR6C,EAAM5D,kBAAkB6H,KAAI,SAACsB,GAAD,OAC3B,YAAC,GAAD,CACEpB,IAAKoB,EAAQ9F,GACbqC,SAAUyD,EACV/D,MAAO+D,EAAQ/D,MACfzB,QAAS,YAbM,SAACrD,GACxB4I,GAAe,GACfD,EAAe3I,GAYLgI,CAAiBa,KAGnB,sBAAK,UAAYA,EAAQ5B,MAAQ4B,EAAQ/C,UAR3C,WASE,sBAAK,QAAU+C,EAAQ/C,eAI7B,YAACF,GAAD,CACEgB,eAAgB5G,EAChBqG,YAAa0B,EACb5B,YA7BgB,WACpByC,GAAe,U,4rBCPnB,IAAME,GAAsBrH,aAAOsH,KAAPtH,CAAH,KACrBF,IAGEyH,GAAsBvH,aAAOwH,KAAPxH,CAAH,KACrBF,IAGE2H,GAAqBzH,aAAO0H,KAAP1H,CAAH,KACpBF,IAGE6H,GAAqB3H,aAAO4H,KAAP5H,CAAH,KACpBF,IAGE+H,GAAiB7H,aAAO8H,KAAP9H,CAAH,KAChBF,IAGEiI,GAAqB/H,aAAOgI,KAAPhI,CAAH,KACpBF,IAGEmI,GAAoBjI,aAAOkI,KAAPlI,CAAH,KACnBF,IAGSqI,GAAc,SAACtG,GAC1B,OACE,mBAAK9C,IAAK8C,EAAMuG,aACd,YAACf,GAAD,MACA,YAACQ,GAAD,MACA,YAACE,GAAD,MACA,YAACR,GAAD,MACA,YAACU,GAAD,MACA,YAACR,GAAD,MACA,YAACE,GAAD,Q,UCmCOU,GAAQtF,YAAQ,KAAM,CAAExF,kBAAhBwF,EApEE,SAAClB,GAAW,IAAD,EACA0C,mBAAS,IADT,oBACzBzH,EADyB,KACfwL,EADe,OAEA/D,mBAAS,IAFT,oBAEzBxH,EAFyB,KAEfwL,EAFe,OAGQhE,oBAAS,GAHjB,oBAGzBiE,EAHyB,KAGXC,EAHW,KA6BhC,OACE,YAAC,IAAMC,SAAP,KACE,YAAC5D,GAAA,EAAD,CAAM/F,IAAKG,GACT,YAAC8F,GAAA,EAAD,CAAgBjG,IAAKM,GACnB,YAAC+F,GAAA,EAAD,KACE,YAACuD,GAAA,EAAD,CACErH,GAAG,iBACHsH,MAAM,YACN3G,QAAQ,WACR0D,SAjCc,SAACC,GACzB0C,EAAY1C,EAAEC,OAAOlF,WAmCf,YAACyE,GAAA,EAAD,KACE,YAACuD,GAAA,EAAD,CACErH,GAAG,iBACHsH,MAAM,WACNlL,KAAK,WACLuE,QAAQ,WACR0D,SAtCc,SAACC,GACzB2C,EAAY3C,EAAEC,OAAOlF,YA0ChB6H,GACC,YAACxG,GAAA,EAAD,CAAYK,MAAM,QAAQgD,cAAY,EAACpD,QAAQ,UAAUqD,UAAU,KAAnE,uBAIF,YAACW,GAAA,EAAD,CAAalH,IAAKS,GAChB,YAAC0G,GAAA,EAAD,CAAQjE,QAAQ,YAAYI,MAAM,UAAUT,QA7C/B,WACnBpF,EAAeqM,eAAe/L,EAAUC,GAAUJ,MAAK,SAACW,GAClDA,EAASwL,WACXhL,aAAa2C,QAAQ,eAAgB,SACrCoB,EAAMtE,gBAAe,GACrBkL,GAAgB,KAEhB3K,aAAa2C,QAAQ,eAAgBnD,EAASyL,cAC9CjL,aAAa2C,QAAQ,gBAAiBnD,EAAS0L,eAC/ClL,aAAa2C,QAAQ,eAAgB,QACrCgI,GAAgB,GAChB5G,EAAMtE,gBAAe,SAkCnB,WAKJ,YAACoJ,GAAA,EAAD,U,UC1BOsC,GAAoBlG,aAPT,SAAC1E,GACvB,MAAO,CACLb,YAAaa,EAAMD,IAAIZ,YACvBU,gBAAiBG,EAAMD,IAAIF,mBAM7B,GAF+B6E,EAlCE,SAAClB,GAClC,OACE,mBAAK9C,IAAKU,GACR,YAACqD,GAAD,MACA,YAACoG,GAAA,EAAD,CAAMnK,IAAKW,GAAqByJ,WAAS,GACvC,YAACD,GAAA,EAAD,CAAMnK,IAA2BY,GAAkByJ,MAAI,GACrD,YAAC,GAAD,CAAahB,YAAavI,MAE5B,YAACqJ,GAAA,EAAD,CAAMnK,IAA2Ba,GAAiBwJ,MAAI,IAClDvH,EAAMrE,aACN,YAAC0L,GAAA,EAAD,CAAMnK,IAAKW,GAAqB0J,MAAI,EAACC,GAAI,IACvC,YAAChB,GAAD,OAIHxG,EAAMrE,aACL,YAAC0L,GAAA,EAAD,CAAMnK,IAAKW,GAAqB0J,MAAI,EAACC,GAAI,IACtCxH,EAAM3D,iBAAmB,YAAC6I,GAAD,OACxBlF,EAAM3D,iBAAmB,YAAC+I,GAAD,aC7B1B,SAASqC,KACtB,OACE,YAAC,IAAD,CAAU5K,MAAOA,GACf,mBAAKK,IAAKU,GACR,YAACwJ,GAAD,QCAYlI,QACW,cAA7BwI,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtN,MAAK,SAAAuN,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.59ce4967.chunk.js","sourcesContent":["export class ProductService {\r\n  static getProductList() {\r\n    return fetch(\"https://fakestoreapi.com/products\", {\r\n      method: \"GET\",\r\n    }).then((res) => {\r\n      return res.json();\r\n    });\r\n  }\r\n\r\n  static getAccessToken(userName, password) {\r\n    let opts = {\r\n      email: userName,\r\n      password: password,\r\n    };\r\n    return fetch(\r\n      \"https://api.loginradius.com/identity/v2/auth/login?apikey=0884adc0-7c41-40cb-ac3b-2dada398ce32&verificationurl=www.bidonhomes.com\",\r\n      {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(opts),\r\n      }\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      });\r\n  }\r\n}\r\n","import * as action from \"./actionTypes\";\r\nimport { ProductService } from \"../services/ProductService\";\r\n\r\nexport const setLoginStatus = (loginStatus) => (dispatch) => {\r\n  dispatch({\r\n    type: action.SET_LOGIN_SUCCESS,\r\n    loginStatus,\r\n  });\r\n};\r\n\r\nexport const getProductList = () => (dispatch) => {\r\n  ProductService.getProductList().then((productList) =>\r\n    dispatch({\r\n      type: action.GET_PRODUCT_LIST,\r\n      productList,\r\n    })\r\n  );\r\n};\r\n\r\nexport const addProductToCart = (productItem, quantity) => (dispatch) => {\r\n  productItem.quantity = quantity;\r\n  dispatch({\r\n    type: action.ADD_PRODUCT_TO_CART,\r\n    productItem,\r\n  });\r\n};\r\n\r\nexport const setProductListView = (isProductListView) => (dispatch) => {\r\n  dispatch({\r\n    type: action.SET_PRODUCT_LIST_VIEW,\r\n    isProductListView,\r\n  });\r\n};\r\n","export const SET_LOGIN_SUCCESS = \"SET_LOGIN_SUCCESS\";\r\nexport const SET_PRODUCT_LIST_VIEW = \"SET_PRODUCT_LIST_VIEW\";\r\nexport const GET_PRODUCT_LIST = \"GET_PRODUCT_LIST\";\r\nexport const ADD_PRODUCT_TO_CART = \"ADD_PRODUCT_TO_CART\";\r\n","import {\r\n  ADD_PRODUCT_TO_CART,\r\n  GET_PRODUCT_LIST,\r\n  SET_LOGIN_SUCCESS,\r\n  SET_PRODUCT_LIST_VIEW,\r\n} from \"../actions\";\r\n\r\nconst inetialState = {\r\n  loginStatus: localStorage.getItem(\"login_status\") === \"true\",\r\n  productList: [],\r\n  productInCartList: [],\r\n  productListView: true,\r\n};\r\n\r\nexport default function (state = inetialState, action) {\r\n  switch (action.type) {\r\n    case SET_LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loginStatus: action.loginStatus,\r\n      };\r\n\r\n    case GET_PRODUCT_LIST:\r\n      return {\r\n        ...state,\r\n        productList: action.productList,\r\n      };\r\n\r\n    case ADD_PRODUCT_TO_CART:\r\n      return {\r\n        ...state,\r\n        productInCartList: [...state.productInCartList, action.productItem],\r\n      };\r\n\r\n    case SET_PRODUCT_LIST_VIEW:\r\n      return {\r\n        ...state,\r\n        productListView: action.isProductListView,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport getReducer from \"./getReducer\";\r\n\r\nexport default combineReducers({\r\n  get: getReducer\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst inetialState = {};\r\nconst middleWare = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  inetialState,\r\n  applyMiddleware(...middleWare)\r\n);\r\n\r\nexport default store;\r\n","/** @jsx jsx */\r\nimport { css } from \"@emotion/core\";\r\n\r\nexport const paperStylesSourceList = css`\r\n  && {\r\n    color: rgba(0, 0, 0, 0.54);\r\n    text-align: left;\r\n    flex-direction: column;\r\n    overflow-y: auto;\r\n    max-height: 90%;\r\n    border-radius: 0px;\r\n  }\r\n`;\r\n\r\nexport const listStyle = css`\r\n  width: 100%;\r\n  background-color: #bbebee;\r\n  color: #f6f6f7;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const listItemStyle = css`\r\n  width: 100%;\r\n  color: #f6f6f7;\r\n  background-color: #232946;\r\n  border-bottom: 1px solid lavenderblush;\r\n  &.selected,\r\n  &.selected:hover {\r\n    background-color: #bbebee;\r\n    color: #232946;\r\n  }\r\n\r\n  ,\r\n  &&:hover {\r\n    background-color: #bbebee;\r\n    color: #232946;\r\n  }\r\n`;\r\n\r\nexport const cardStyle = css`\r\n  && {\r\n    width: 100%;\r\n    padding: 3px;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow-y: auto !important;\r\n  }\r\n`;\r\n\r\nexport const paperStyles = css`\r\n  color: rgba(0, 0, 0, 0.54);\r\n  text-align: left;\r\n  overflow-y: auto;\r\n  max-height: 90%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const search = css`\r\n  margin-left: 38px;\r\n  width: 40%;\r\n  position: relative;\r\n  margin-right: 16px;\r\n  border-radius: 4px;\r\n  background-color: rgba(255, 255, 255, 0.15);\r\n`;\r\n\r\nexport const searchIcon = css`\r\n  padding: 12px 16px;\r\n  height: 100%;\r\n  position: absolute;\r\n  pointerevents: none;\r\n  display: flex;\r\n  alignitems: center;\r\n  justifycontent: center;\r\n`;\r\n\r\nexport const sectionDesktop = css`\r\n  display: flex;\r\n`;\r\n\r\nexport const cardActionColumnFlexBox = css`\r\n  ${sectionDesktop};\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const title = css`\r\n  display: block;\r\n`;\r\n\r\nexport const grow = css`\r\n  && {\r\n    flex-grow: 1;\r\n    background-color: #232946;\r\n  }\r\n`;\r\n\r\nexport const inputRoot = css`\r\n  color: inherit;\r\n`;\r\n\r\nexport const inputInput = css`\r\n  ${inputRoot};\r\n  padding: 8px 8px 8px 0px;\r\n  transition: width 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\r\n  padding-left: calc(1em + 32px);\r\n`;\r\n\r\nexport const NoPadding = css`\r\n  padding: 0px;\r\n`;\r\n\r\nexport const rootContainer = css`\r\n  flex-grow: 1;\r\n  flex-direction: row;\r\n  height: 100%;\r\n  overflow-y: hidden;\r\n  overflow-x: hidden;\r\n`;\r\n\r\nexport const fullContainerHeight = css`\r\n  && {\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const sideBarFixWidth = css`\r\n  width: 5%;\r\n`;\r\n\r\nexport const containerWidth = css`\r\n  width: 95%;\r\n`;\r\n\r\nexport const sideBarStyles = css`\r\n  background-color: #141419;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: hidden;\r\n  color: #9d9ea3;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nexport const sideBarIcons = css`\r\n  && {\r\n    font-size: 2rem;\r\n    margin: 15px 0;\r\n  }\r\n`;\r\n","/** @jsx jsx */\r\nimport { jsx } from \"@emotion/core\";\r\nimport styled from \"@emotion/styled\";\r\nimport React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport { sectionDesktop, grow } from \"../styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProductListView, setLoginStatus } from \"../actions\";\r\n\r\nconst StyledAppBar = styled(AppBar)`\r\n  ${grow}\r\n`;\r\n\r\nclass NavBarUnwrapped extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      anchorEl: null,\r\n    };\r\n  }\r\n\r\n  setAnchorEl(value) {\r\n    this.setState({\r\n      anchorEl: value,\r\n    });\r\n  }\r\n\r\n  handleProfileMenuOpen = (event) => {\r\n    this.setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  handleMenuClose = () => {\r\n    this.setAnchorEl(null);\r\n  };\r\n\r\n  onLogoutClick = () => {\r\n    localStorage.setItem(\"access_token\", \"\");\r\n    localStorage.setItem(\"refresh_token\", \"\");\r\n    localStorage.setItem(\"login_status\", \"false\");\r\n  };\r\n  render() {\r\n    const isMenuOpen = Boolean(this.state.anchorEl);\r\n\r\n    const menuId = \"primary-search-account-menu\";\r\n    const renderMenu = (\r\n      <Menu\r\n        anchorEl={this.state.anchorEl}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        id={menuId}\r\n        keepMounted\r\n        transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        open={isMenuOpen}\r\n        onClose={this.handleMenuClose}\r\n      >\r\n        <MenuItem onClick={this.handleMenuClose}>Profile</MenuItem>\r\n        <MenuItem\r\n          onClick={() => {\r\n            this.handleMenuClose();\r\n            this.props.setLoginStatus(false);\r\n            this.onLogoutClick();\r\n          }}\r\n        >\r\n          Logout\r\n        </MenuItem>\r\n      </Menu>\r\n    );\r\n    return (\r\n      <div css={grow}>\r\n        <StyledAppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" noWrap>\r\n              BidOnHomes Products\r\n            </Typography>\r\n            {/* <div css={search}>\r\n              <div css={searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Search…\"\r\n                css={inputInput}\r\n                inputProps={{ \"aria-label\": \"search\" }}\r\n              />\r\n            </div> */}\r\n            <div css={grow} />\r\n            <div css={sectionDesktop}>\r\n              <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                <Badge color=\"secondary\">\r\n                  <ListAltIcon\r\n                    onClick={() => {\r\n                      this.props.setProductListView(true);\r\n                    }}\r\n                  />\r\n                </Badge>\r\n              </IconButton>\r\n              <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                <Badge\r\n                  color=\"secondary\"\r\n                  badgeContent={this.props.productInCartList.length}\r\n                >\r\n                  <ShoppingCartIcon\r\n                    onClick={() => {\r\n                      this.props.setProductListView(false);\r\n                    }}\r\n                  />\r\n                </Badge>\r\n              </IconButton>\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls={menuId}\r\n                aria-haspopup=\"true\"\r\n                onClick={this.handleProfileMenuOpen}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n            </div>\r\n          </Toolbar>\r\n        </StyledAppBar>\r\n        {renderMenu}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    productInCartList: state.get.productInCartList,\r\n  };\r\n};\r\n\r\nexport const NavBar = connect(mapStateToProps, {\r\n  setProductListView,\r\n  setLoginStatus,\r\n})(NavBarUnwrapped);\r\n","/** @jsx jsx */\r\nimport { jsx } from \"@emotion/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"@emotion/styled\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { listItemStyle } from \"../styles\";\r\n\r\nconst StyledListItem = styled(ListItem)`\r\n  ${listItemStyle}\r\n`;\r\n\r\nexport const ListItemView = (props) => {\r\n  return (\r\n    <StyledListItem>\r\n      <ListItemText primary={props.title} />\r\n      {props.children}\r\n    </StyledListItem>\r\n  );\r\n};\r\n\r\nStyledListItem.propType = {\r\n  onListItemClick: PropTypes.func,\r\n  listItem: PropTypes.object,\r\n};\r\n","/** @jsx jsx */\r\nimport { jsx } from \"@emotion/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { addProductToCart, setProductListView } from \"../actions\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { useState } from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 445,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nconst ProductItemPopupUnwrapped = (props) => {\r\n  let quantityList = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n  const classes = useStyles();\r\n  const [quantity, setQuantity] = useState(1);\r\n\r\n  const handleQuantityChange = (e) => {\r\n    setQuantity(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={props.handleClose}\r\n      aria-labelledby=\"customized-dialog-title\"\r\n      open={props.isModalOpen}\r\n    >\r\n      <MuiDialogTitle id=\"customized-dialog-title\" onClose={props.handleClose}>\r\n        Selected Product\r\n      </MuiDialogTitle>\r\n      <MuiDialogContent dividers>\r\n        <Card className={classes.root}>\r\n          <CardActionArea>\r\n            <CardMedia\r\n              className={classes.media}\r\n              image={props.productDetails.image}\r\n              title=\"Product Image\"\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                {props.productDetails.title}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {props.productDetails.description}\r\n              </Typography>\r\n              <div>\r\n                <h3>{\"Price: Rs.\" + props.productDetails.price * quantity}</h3>\r\n                &nbsp;&nbsp;\r\n                <Select native value={quantity} onChange={handleQuantityChange}>\r\n                  {quantityList.map((qty) => {\r\n                    return (\r\n                      <option key={qty} value={qty}>\r\n                        {qty}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </div>\r\n            </CardContent>\r\n          </CardActionArea>\r\n          <CardActions>\r\n            <Button size=\"small\" color=\"secondary\" onClick={props.handleClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                props.addProductToCart(props.productDetails, quantity);\r\n                props.setProductListView(false);\r\n                props.handleClose();\r\n              }}\r\n            >\r\n              Add Product\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </MuiDialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport const ProductItemPopup = connect(null, {\r\n  addProductToCart,\r\n  setProductListView,\r\n})(ProductItemPopupUnwrapped);\r\n","/** @jsx jsx */\r\nimport React from \"react\";\r\nimport { jsx } from \"@emotion/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { connect } from \"react-redux\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { ListItemView } from \"./ListItemView\";\r\nimport { paperStyles, listStyle,cardStyle } from \"../styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { getProductList } from \"../actions\";\r\nimport { ProductItemPopup } from \"./ProductItemPopup\";\r\n\r\nclass ProductListUnwrapped extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isModelOpen: false,\r\n      productItem: {},\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.getProductList();\r\n  }\r\n\r\n  onHandleClose = () => {\r\n    this.setState({ isModelOpen: false });\r\n  };\r\n\r\n  onProductClicked = (productItem) => {\r\n    this.setState({ isModelOpen: true, productItem });\r\n  };\r\n\r\n  render() {\r\n    let list = this.props.productList;\r\n    return (\r\n      <Paper css={paperStyles}>\r\n        {list.length === 0 ? (\r\n          <CardActionArea css={cardStyle}>\r\n            <CardContent >\r\n              <CircularProgress />\r\n            </CardContent>\r\n          </CardActionArea>\r\n        ) : (\r\n          <List css={listStyle}>\r\n            {list.map((productItem) => {\r\n              return (\r\n                <ListItemView\r\n                  listItem={productItem}\r\n                  key={productItem.id}\r\n                  title={productItem.title}\r\n                >\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      this.onProductClicked(productItem);\r\n                    }}\r\n                    startIcon={<ShoppingCartIcon />}\r\n                  >\r\n                    Add Product\r\n                  </Button>\r\n\r\n                  <Divider />\r\n                </ListItemView>\r\n              );\r\n            })}\r\n          </List>\r\n        )}\r\n        <ProductItemPopup\r\n          productDetails={this.state.productItem}\r\n          isModalOpen={this.state.isModelOpen}\r\n          handleClose={this.onHandleClose}\r\n        />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    productList: state.get.productList,\r\n  };\r\n};\r\n\r\nexport const ProductList = connect(mapStateToProps, { getProductList })(\r\n  ProductListUnwrapped\r\n);\r\n","/** @jsx jsx */\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { jsx } from \"@emotion/core\";\r\nimport styled from \"@emotion/styled\";\r\nimport { connect } from \"react-redux\";\r\nimport List from \"@material-ui/core/List\";\r\nimport { paperStylesSourceList, listStyle } from \"../styles\";\r\nimport { ListItemView } from \"./ListItemView\";\r\nimport { useState } from \"react\";\r\nimport { ProductItemPopup } from \"./ProductItemPopup\";\r\n\r\nconst StyledPaper = styled(Paper)`\r\n  ${paperStylesSourceList}\r\n`;\r\n\r\nconst ProductInCartUnwrapped = (props) => {\r\n  const [productItem, setProductItem] = useState({});\r\n  const [isModelOpen, setIsModalOpen] = useState(false);\r\n  const onHandleClose = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const onProductClicked = (productItem) => {\r\n    setIsModalOpen(true);\r\n    setProductItem(productItem);\r\n  };\r\n\r\n  return (\r\n    <StyledPaper>\r\n      <List css={listStyle}>\r\n        {props.productInCartList.map((product) => (\r\n          <ListItemView\r\n            key={product.id}\r\n            listItem={product}\r\n            title={product.title}\r\n            onClick={() => {\r\n              onProductClicked(product);\r\n            }}\r\n          >\r\n            <h3>{\"Price: \" + product.price * product.quantity}</h3>&nbsp;&nbsp;\r\n            <h3>{\"Qty: \" + product.quantity}</h3>\r\n          </ListItemView>\r\n        ))}\r\n      </List>\r\n      <ProductItemPopup\r\n        productDetails={productItem}\r\n        isModalOpen={isModelOpen}\r\n        handleClose={onHandleClose}\r\n      />\r\n    </StyledPaper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    productInCartList: state.get.productInCartList,\r\n  };\r\n};\r\n\r\nexport const ProductInCart = connect(\r\n  mapStateToProps,\r\n  {}\r\n)(ProductInCartUnwrapped);\r\n","/** @jsx jsx */\r\nimport { jsx } from \"@emotion/core\";\r\nimport styled from \"@emotion/styled\";\r\nimport { sideBarIcons } from \"../styles\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport GraphicEqIcon from \"@material-ui/icons/GraphicEq\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport FeedbackIcon from \"@material-ui/icons/Feedback\";\r\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\n\r\nconst StyledGraphicEqIcon = styled(GraphicEqIcon)`\r\n  ${sideBarIcons}\r\n`;\r\n\r\nconst StyledDashboardIcon = styled(DashboardIcon)`\r\n  ${sideBarIcons}\r\n`;\r\n\r\nconst StyledSettingsIcon = styled(SettingsIcon)`\r\n  ${sideBarIcons}\r\n`;\r\n\r\nconst StyledFeedbackIcon = styled(FeedbackIcon)`\r\n  ${sideBarIcons}\r\n`;\r\n\r\nconst StyledHomeIcon = styled(HomeIcon)`\r\n  ${sideBarIcons}\r\n`;\r\n\r\nconst StyledMenuBookIcon = styled(MenuBookIcon)`\r\n  ${sideBarIcons}\r\n`;\r\n\r\nconst StyledReceiptIcon = styled(ReceiptIcon)`\r\n  ${sideBarIcons}\r\n`;\r\n\r\nexport const SideBarView = (props) => {\r\n  return (\r\n    <div css={props.styleObject}>\r\n      <StyledGraphicEqIcon />\r\n      <StyledHomeIcon />\r\n      <StyledMenuBookIcon />\r\n      <StyledDashboardIcon />\r\n      <StyledReceiptIcon />\r\n      <StyledSettingsIcon />\r\n      <StyledFeedbackIcon />\r\n    </div>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React, { useState } from \"react\";\r\nimport { jsx } from \"@emotion/core\";\r\nimport { cardStyle, NoPadding, cardActionColumnFlexBox } from \"../styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { setLoginStatus } from \"../actions\";\r\nimport { ProductService } from \"../services/ProductService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst LoginUnwrapped = (props) => {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(false);\r\n\r\n  const onUserNameEntered = (e) => {\r\n    setUserName(e.target.value);\r\n  };\r\n\r\n  const onPasswordEntered = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const onLoginClick = () => {\r\n    ProductService.getAccessToken(userName, password).then((response) => {\r\n      if (response.ErrorCode) {\r\n        localStorage.setItem(\"login_status\", \"false\");\r\n        props.setLoginStatus(false);\r\n        setErrorMessage(true);\r\n      } else {\r\n        localStorage.setItem(\"access_token\", response.access_token);\r\n        localStorage.setItem(\"refresh_token\", response.refresh_token);\r\n        localStorage.setItem(\"login_status\", \"true\");\r\n        setErrorMessage(false);\r\n        props.setLoginStatus(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card css={cardStyle}>\r\n        <CardActionArea css={cardActionColumnFlexBox}>\r\n          <CardContent>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"User Name\"\r\n              variant=\"outlined\"\r\n              onChange={onUserNameEntered}\r\n            />\r\n          </CardContent>\r\n          <CardContent>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              onChange={onPasswordEntered}\r\n            />\r\n          </CardContent>\r\n        </CardActionArea>\r\n\r\n        {errorMessage && (\r\n          <Typography color=\"error\" gutterBottom variant=\"caption\" component=\"p\">\r\n            Invalid Credentials\r\n          </Typography>\r\n        )}\r\n        <CardActions css={NoPadding}>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={onLoginClick}>\r\n            Login\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n      <CircularProgress />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport const Login = connect(null, { setLoginStatus })(LoginUnwrapped);","/** @jsx jsx */\r\nimport { jsx } from \"@emotion/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  NavBar,\r\n  Login,\r\n  SideBarView,\r\n  ProductList,\r\n  ProductInCart,\r\n} from \"./index\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fullContainerHeight,\r\n  rootContainer,\r\n  sideBarFixWidth,\r\n  sideBarStyles,\r\n  containerWidth,\r\n} from \"../styles\";\r\n\r\nconst BidOnHomesManagerUnwrapped = (props) => {\r\n  return (\r\n    <div css={rootContainer}>\r\n      <NavBar />\r\n      <Grid css={fullContainerHeight} container>\r\n        <Grid css={(fullContainerHeight, sideBarFixWidth)} item>\r\n          <SideBarView styleObject={sideBarStyles} />\r\n        </Grid>\r\n        <Grid css={(fullContainerHeight, containerWidth)} item>\r\n          {!props.loginStatus && (\r\n            <Grid css={fullContainerHeight} item xs={12}>\r\n              <Login />\r\n            </Grid>\r\n          )}\r\n\r\n          {props.loginStatus && (\r\n            <Grid css={fullContainerHeight} item xs={12}>\r\n              {props.productListView && <ProductList />}\r\n              {!props.productListView && <ProductInCart />}\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loginStatus: state.get.loginStatus,\r\n    productListView: state.get.productListView,\r\n  };\r\n};\r\n\r\nexport const BidOnHomesManager = connect(\r\n  mapStateToProps,\r\n  {}\r\n)(BidOnHomesManagerUnwrapped);\r\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport \"./App.css\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport { rootContainer } from \"./styles\";\nimport { BidOnHomesManager } from \"./components\";\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <div css={rootContainer}>\n        <BidOnHomesManager />\n      </div>\n    </Provider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}